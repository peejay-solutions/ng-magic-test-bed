var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/IInnerMethodMeta.html",[0,1.141,1,1.412]],["body/interfaces/IInnerMethodMeta.html",[0,0.868,1,1.847,2,1.767,3,0.868,4,0.704,5,0.704,6,0.257,7,0.374,8,0.374,9,0.257,10,0.348,11,0.868,12,1.026,13,0.868,14,0.868,15,0.975,16,1.565,17,2.995,18,3.103,19,3.103,20,1.284,21,0.774,22,0.085,23,1.927,24,2.326,25,0.868,26,1.074,27,1.074,28,1.026,29,2.03,30,0.868,31,2.03,32,2.253,33,1.493,34,1.349,35,1.966,36,1.965,37,3.04,38,1.966,39,1.767,40,1.767,41,1.767,42,1.966,43,1.767,44,1.767,45,1.767,46,1.767,47,1.767,48,1.767,49,1.767,50,1.767,51,1.767,52,1.767,53,1.767,54,1.767,55,1.767,56,1.767,57,1.767,58,1.767,59,1.767,60,2.576,61,3.04,62,3.34,63,1.966,64,2.576,65,2.321,66,3.04,67,1.767,68,2.576,69,1.847,70,2.321,71,1.847,72,2.576,73,2.576,74,2.576,75,1.767,76,1.767,77,1.767,78,1.349,79,1.349,80,1.767,81,1.767,82,1.767,83,1.767,84,1.767,85,1.767,86,0.032,87,0.047,88,0.032]],["title/modules/NgMagicTetBedModule.html",[89,1.774,90,1.412]],["body/modules/NgMagicTetBedModule.html",[3,1.569,4,1.272,5,1.272,6,0.464,7,0.594,8,0.594,9,0.464,10,0.628,22,0.083,25,1.569,28,1.272,86,0.058,87,0.069,88,0.058,90,2.321,91,1.94,92,3.193,93,3.193,94,3.819,95,2.438,96,1.94,97,2.438,98,2.438,99,0.813]],["title/classes/SpyObserver.html",[99,0.592,100,1.412]],["body/classes/SpyObserver.html",[3,1.007,4,0.817,5,0.817,6,0.581,7,0.631,8,0.631,9,0.581,10,0.787,15,0.522,16,1.74,21,0.958,22,0.083,23,1.622,24,2.006,25,1.007,28,0.817,36,1.007,69,1.246,71,1.246,86,0.037,87,0.052,88,0.037,99,0.522,100,1.74,101,1.246,102,3.052,103,1.565,104,2.621,105,4.281,106,3.574,107,3.574,108,3.574,109,3.301,110,2.864,111,3.301,112,1.246,113,2.864,114,2.871,115,2.367,116,2.367,117,2.05,118,1.246,119,1.246,120,1.565,121,3.895,122,2.05,123,2.05,124,2.05,125,1.246,126,1.007,127,2.05,128,2.05,129,2.05,130,2.05,131,1.246,132,2.05,133,1.565,134,2.05,135,3.301,136,2.864,137,2.864,138,2.05,139,1.246,140,2.05,141,2.05,142,2.05]],["title/classes/TestBedBase.html",[99,0.592,143,1.412]],["body/classes/TestBedBase.html",[3,0.668,4,0.541,5,0.541,6,0.579,7,0.63,8,0.63,9,0.63,10,0.784,15,0.346,16,1.284,20,0.436,21,0.986,22,0.084,23,1.868,25,1.437,26,0.826,27,0.826,28,0.541,32,2.353,36,0.668,86,0.025,87,0.038,88,0.025,95,1.038,96,1.778,97,2.233,99,0.346,101,0.826,104,2.643,112,0.826,115,2.26,116,2.39,118,2.26,119,2.26,125,1.284,126,1.038,131,0.826,143,1.284,144,1.958,145,2.422,146,0.826,147,3.355,148,2.593,149,2.593,150,1.614,151,2.593,152,2.593,153,1.778,154,2.233,155,2.593,156,2.926,157,1.359,158,3.169,159,2.113,160,2.113,161,1.359,162,2.113,163,1.359,164,2.84,165,2.113,166,1.359,167,2.113,168,1.359,169,1.359,170,2.113,171,1.359,172,2.113,173,1.359,174,2.113,175,1.359,176,1.359,177,2.113,178,2.926,179,1.359,180,2.113,181,1.359,182,1.359,183,1.359,184,1.038,185,1.359,186,1.038,187,2.926,188,1.359,189,1.359,190,1.359,191,1.359,192,1.359,193,1.359,194,1.359,195,1.359,196,1.359,197,1.359,198,1.359,199,1.359,200,1.359,201,1.359,202,1.359,203,1.359,204,1.359,205,1.359,206,1.359,207,1.359,208,1.359,209,1.359,210,1.359,211,1.359]],["title/coverage.html",[212,2.382]],["body/coverage.html",[0,0.78,1,0.965,5,0.633,6,0.633,7,0.661,8,0.662,9,0.635,10,0.857,11,1.869,12,1.683,13,1.869,14,1.869,20,1.346,21,0.405,22,0.08,29,0.965,30,0.78,31,0.965,33,2.14,86,0.029,87,0.043,88,0.029,99,0.865,100,0.965,102,1.212,103,1.212,139,0.965,143,0.965,144,1.669,145,0.965,146,0.965,212,1.212,213,0.965,214,1.588,215,1.588,216,1.588,217,1.212,218,4.225,219,1.212,220,1.212,221,1.212,222,3.172,223,1.212,224,1.212,225,1.212,226,1.212,227,1.588,228,2.167,229,2.167,230,2.167,231,0.965,232,0.965,233,1.212,234,1.403,235,1.212,236,1.212,237,1.212,238,1.212,239,1.212,240,1.212,241,1.817,242,0.965,243,2.18,244,1.212,245,1.588,246,1.588,247,1.588,248,1.588,249,1.588,250,1.588,251,1.588,252,1.588,253,1.588]],["title/miscellaneous/functions.html",[234,1.366,254,0.631]],["body/miscellaneous/functions.html",[4,1.049,6,0.636,7,0.65,8,0.65,9,0.636,10,0.76,11,0.895,12,1.539,13,0.895,14,1.841,15,0.464,18,2.588,20,0.846,21,0.788,22,0.078,23,0.895,30,1.294,34,1.392,35,2.745,38,1.392,42,1.392,65,1.392,70,2.011,71,1.601,78,1.392,79,2.011,86,0.033,87,0.048,88,0.033,114,1.392,115,2.59,118,2.546,119,2.546,120,2.011,131,1.108,144,0.895,164,2.011,217,2.011,219,2.011,220,2.011,221,2.011,223,1.392,224,2.011,225,1.392,226,2.011,228,1.88,229,1.88,230,2.348,231,1.601,234,1.841,235,2.011,236,2.011,237,2.011,238,1.392,239,2.011,240,2.011,242,1.108,254,0.585,255,2.745,256,1.823,257,2.588,258,1.823,259,1.823,260,1.823,261,1.823,262,1.823,263,1.823,264,1.823,265,1.823,266,3.094,267,1.823,268,2.635,269,1.823,270,2.635,271,1.823,272,1.823]],["title/index.html",[15,0.501,273,1.5,274,1.5]],["body/index.html",[6,0.345,7,0.575,8,0.598,9,0.575,12,0.631,20,0.508,22,0.084,26,0.962,27,0.962,28,0.946,33,0.778,36,1.867,69,1.443,86,0.029,87,0.043,88,0.029,99,0.807,104,2.309,112,0.962,116,0.962,126,1.556,139,1.732,150,1.813,153,0.962,186,1.209,213,1.443,232,0.962,234,0.778,242,1.732,244,1.209,275,2.375,276,1.583,277,1.583,278,1.583,279,1.583,280,1.583,281,1.583,282,1.583,283,2.85,284,1.583,285,2.85,286,1.209,287,1.583,288,1.583,289,1.583,290,1.583,291,2.375,292,1.443,293,1.583,294,3.167,295,1.583,296,2.375,297,1.583,298,2.375,299,1.583,300,1.583,301,1.583,302,1.583,303,1.583,304,1.583,305,2.85,306,2.375,307,1.583,308,1.583,309,1.583,310,1.209,311,1.583,312,1.583,313,1.583,314,1.583,315,2.375,316,1.583,317,1.583,318,2.375,319,1.583,320,2.375,321,1.583,322,1.583,323,1.583,324,1.583,325,1.583,326,1.583,327,1.583,328,1.583,329,3.563,330,2.375,331,1.583,332,1.583,333,1.583,334,1.583,335,1.583,336,1.583,337,1.209,338,2.375,339,1.583,340,1.583,341,1.583,342,1.209,343,2.375,344,1.583,345,1.583,346,1.583,347,2.375,348,1.583,349,1.583,350,1.583,351,1.209,352,1.583,353,1.583,354,1.583,355,3.393,356,3.393,357,1.583,358,1.583,359,2.375,360,2.375,361,2.375,362,1.583,363,1.583,364,2.375,365,2.375,366,2.375,367,3.167,368,1.583,369,1.583,370,3.393,371,1.583,372,1.583,373,1.583,374,2.375,375,2.375,376,3.8,377,1.583,378,1.583,379,2.375,380,2.85,381,2.375,382,2.375,383,2.375,384,2.375,385,2.85,386,2.375,387,1.583,388,2.375,389,2.375,390,1.583,391,1.583,392,1.583,393,1.583,394,1.583,395,1.583,396,1.583,397,1.583,398,1.583,399,1.583,400,1.583,401,1.583,402,1.583,403,1.209,404,1.583,405,1.583,406,1.583]],["title/license.html",[273,1.5,274,1.5,407,1.5]],["body/license.html",[22,0.063,86,0.049,87,0.063,88,0.049,213,1.646,286,2.068,310,2.634,337,2.899,342,2.068,351,2.068,403,2.068,407,2.068,408,2.709,409,3.797,410,2.709,411,2.709,412,2.709,413,3.45,414,2.709,415,2.709,416,2.709,417,2.709,418,2.709,419,2.709,420,3.45,421,4.384,422,2.709,423,2.709,424,2.709,425,2.709,426,2.709,427,3.45,428,2.709,429,2.709,430,2.709,431,2.709,432,2.709,433,2.709,434,3.45,435,2.709,436,2.709,437,2.709,438,2.709,439,2.709,440,2.709,441,3.45,442,3.45,443,2.709,444,2.709,445,2.709,446,2.709,447,2.709,448,2.709,449,2.709,450,2.709,451,2.709,452,2.709,453,2.709,454,2.709,455,2.709,456,2.709,457,2.709,458,2.709,459,2.709,460,2.709,461,2.709,462,2.709,463,2.709,464,2.709,465,2.709,466,2.709,467,2.709,468,2.709,469,2.709,470,2.709,471,2.068,472,2.709,473,2.709]],["title/modules.html",[91,1.896]],["body/modules.html",[22,0.073,86,0.064,87,0.073,88,0.064,90,2.138,91,2.138,474,3.518,475,3.518,476,3.518]],["title/overview.html",[477,2.382]],["body/overview.html",[0,1.655,22,0.072,86,0.061,87,0.072,88,0.061,89,3.01,96,2.047,98,2.572,101,2.047,133,3.01,153,2.047,154,2.572,471,2.572,477,2.572,478,3.369,479,3.369,480,3.369,481,3.943,482,3.369]],["title/miscellaneous/typealiases.html",[254,0.631,483,2.781]],["body/miscellaneous/typealiases.html",[6,0.608,7,0.647,8,0.647,9,0.633,10,0.736,15,0.787,21,0.787,22,0.068,86,0.056,87,0.068,88,0.056,144,1.839,145,1.877,146,2.275,184,3.197,241,2.358,243,2.858,254,0.991,484,3.088,485,3.088,486,3.088]],["title/miscellaneous/variables.html",[254,0.631,292,1.69]],["body/miscellaneous/variables.html",[6,0.613,7,0.63,8,0.63,9,0.613,10,0.678,11,1.327,12,1.591,13,1.327,14,1.863,15,0.688,17,2.063,19,2.063,20,1.217,21,0.877,22,0.082,24,1.642,29,2.093,30,1.327,31,2.093,32,2.304,33,1.327,63,2.063,86,0.049,87,0.063,88,0.049,125,2.304,126,1.863,228,1.642,229,1.642,230,2.304,231,1.642,232,2.304,233,2.63,254,0.867,255,2.63,257,2.63,292,1.642,487,2.702,488,2.702]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":33,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0/1",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["08",{"_index":401,"title":{},"body":{"index.html":{}}}],["1",{"_index":133,"title":{},"body":{"classes/SpyObserver.html":{},"overview.html":{}}}],["100",{"_index":385,"title":{},"body":{"index.html":{}}}],["2",{"_index":369,"title":{},"body":{"index.html":{}}}],["2018",{"_index":411,"title":{},"body":{"license.html":{}}}],["22",{"_index":402,"title":{},"body":{"index.html":{}}}],["4",{"_index":381,"title":{},"body":{"index.html":{}}}],["5",{"_index":482,"title":{},"body":{"overview.html":{}}}],["above",{"_index":440,"title":{},"body":{"license.html":{}}}],["abstracttype",{"_index":184,"title":{},"body":{"classes/TestBedBase.html":{},"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":110,"title":{},"body":{"classes/SpyObserver.html":{}}}],["action",{"_index":466,"title":{},"body":{"license.html":{}}}],["aimport",{"_index":169,"title":{},"body":{"classes/TestBedBase.html":{}}}],["aliases",{"_index":484,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":279,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":432,"title":{},"body":{"license.html":{}}}],["angular",{"_index":275,"title":{},"body":{"index.html":{}}}],["angular/core",{"_index":95,"title":{},"body":{"modules/NgMagicTetBedModule.html":{},"classes/TestBedBase.html":{}}}],["angular/core/testing",{"_index":27,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/TestBedBase.html":{},"index.html":{}}}],["another",{"_index":357,"title":{},"body":{"index.html":{}}}],["aotsummaries",{"_index":205,"title":{},"body":{"classes/TestBedBase.html":{}}}],["arising",{"_index":470,"title":{},"body":{"license.html":{}}}],["array",{"_index":23,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/functions.html":{}}}],["arrays",{"_index":299,"title":{},"body":{"index.html":{}}}],["assigning",{"_index":307,"title":{},"body":{"index.html":{}}}],["associated",{"_index":422,"title":{},"body":{"license.html":{}}}],["async",{"_index":183,"title":{},"body":{"classes/TestBedBase.html":{}}}],["authors",{"_index":459,"title":{},"body":{"license.html":{}}}],["auto",{"_index":332,"title":{},"body":{"index.html":{}}}],["available",{"_index":475,"title":{},"body":{"modules.html":{}}}],["b",{"_index":270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["background",{"_index":314,"title":{},"body":{"index.html":{}}}],["base.class.ts",{"_index":146,"title":{},"body":{"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["base.class.ts:14",{"_index":166,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:20",{"_index":163,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:24",{"_index":181,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:30",{"_index":179,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:34",{"_index":171,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:40",{"_index":168,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:44",{"_index":175,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:50",{"_index":173,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:55",{"_index":176,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:8",{"_index":161,"title":{},"body":{"classes/TestBedBase.html":{}}}],["base.class.ts:9",{"_index":159,"title":{},"body":{"classes/TestBedBase.html":{}}}],["bed",{"_index":9,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bed.class.ts",{"_index":243,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bed.module.ts",{"_index":93,"title":{},"body":{"modules/NgMagicTetBedModule.html":{}}}],["bed/create",{"_index":238,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bed/ng",{"_index":241,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bed/setup",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["bed/src/describe",{"_index":11,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bed/src/make/make.function.ts",{"_index":223,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bed/src/ng",{"_index":92,"title":{},"body":{"modules/NgMagicTetBedModule.html":{}}}],["bed/src/observe/observe.function.ts",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bed/src/observe/spy",{"_index":102,"title":{},"body":{"classes/SpyObserver.html":{},"coverage.html":{}}}],["bed/src/spy",{"_index":228,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bed/src/test",{"_index":144,"title":{},"body":{"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["bed/test",{"_index":145,"title":{},"body":{"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":12,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["beforeeach",{"_index":338,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":334,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":287,"title":{},"body":{"index.html":{}}}],["better",{"_index":288,"title":{},"body":{"index.html":{}}}],["bloat",{"_index":282,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":480,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":476,"title":{},"body":{"modules.html":{}}}],["c",{"_index":410,"title":{},"body":{"license.html":{}}}],["callback",{"_index":17,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/variables.html":{}}}],["callinnermethodatpath",{"_index":217,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["callinnermethodatpath(describecallback",{"_index":42,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":417,"title":{},"body":{"license.html":{}}}],["claim",{"_index":462,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{}},"body":{"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":101,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"overview.html":{}}}],["code",{"_index":283,"title":{},"body":{"index.html":{}}}],["compilecomponents",{"_index":47,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["complete",{"_index":106,"title":{},"body":{"classes/SpyObserver.html":{}}}],["componentfixture",{"_index":182,"title":{},"body":{"classes/TestBedBase.html":{}}}],["conditions",{"_index":439,"title":{},"body":{"license.html":{}}}],["config",{"_index":196,"title":{},"body":{"classes/TestBedBase.html":{}}}],["config.declarations.push(...declarations",{"_index":188,"title":{},"body":{"classes/TestBedBase.html":{}}}],["config.imports.push(...imports",{"_index":192,"title":{},"body":{"classes/TestBedBase.html":{}}}],["config.providers.push(...providers",{"_index":194,"title":{},"body":{"classes/TestBedBase.html":{}}}],["config.schemas.push(...schemas",{"_index":190,"title":{},"body":{"classes/TestBedBase.html":{}}}],["configuration",{"_index":304,"title":{},"body":{"index.html":{}}}],["configurecompiler",{"_index":48,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["configuretestingmodule",{"_index":46,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["connection",{"_index":472,"title":{},"body":{"license.html":{}}}],["const",{"_index":36,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"index.html":{}}}],["constants",{"_index":303,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"index.html":{}}}],["constructor(initialconfig",{"_index":157,"title":{},"body":{"classes/TestBedBase.html":{}}}],["constructor(observable",{"_index":113,"title":{},"body":{"classes/SpyObserver.html":{}}}],["constructor(private",{"_index":186,"title":{},"body":{"classes/TestBedBase.html":{},"index.html":{}}}],["contract",{"_index":467,"title":{},"body":{"license.html":{}}}],["copies",{"_index":434,"title":{},"body":{"license.html":{}}}],["copy",{"_index":420,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":409,"title":{},"body":{"license.html":{}}}],["counter",{"_index":363,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":212,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcomponent",{"_index":49,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["createsetup",{"_index":240,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createsetup(setup",{"_index":262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":315,"title":{},"body":{"index.html":{}}}],["custom",{"_index":333,"title":{},"body":{"index.html":{}}}],["damages",{"_index":463,"title":{},"body":{"license.html":{}}}],["data",{"_index":356,"title":{},"body":{"index.html":{}}}],["deal",{"_index":423,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":473,"title":{},"body":{"license.html":{}}}],["declaration",{"_index":151,"title":{},"body":{"classes/TestBedBase.html":{}}}],["declaration(declaration",{"_index":162,"title":{},"body":{"classes/TestBedBase.html":{}}}],["declarations",{"_index":96,"title":{},"body":{"modules/NgMagicTetBedModule.html":{},"classes/TestBedBase.html":{},"overview.html":{}}}],["declarations(declarations",{"_index":165,"title":{},"body":{"classes/TestBedBase.html":{}}}],["default",{"_index":125,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":116,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"index.html":{}}}],["dependencies",{"_index":478,"title":{},"body":{"overview.html":{}}}],["describe('simple",{"_index":374,"title":{},"body":{"index.html":{}}}],["describe(describetext",{"_index":39,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["describebeforeeach",{"_index":29,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["describecallback",{"_index":35,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["describetest",{"_index":31,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["describetext",{"_index":260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribute",{"_index":430,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":213,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":305,"title":{},"body":{"index.html":{}}}],["dosomething",{"_index":394,"title":{},"body":{"index.html":{}}}],["dosomething(param",{"_index":364,"title":{},"body":{"index.html":{}}}],["each",{"_index":312,"title":{},"body":{"index.html":{}}}],["each.function.ts",{"_index":14,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["each/describe",{"_index":13,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entire",{"_index":309,"title":{},"body":{"index.html":{}}}],["entry",{"_index":85,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["error",{"_index":107,"title":{},"body":{"classes/SpyObserver.html":{}}}],["event",{"_index":458,"title":{},"body":{"license.html":{}}}],["example",{"_index":349,"title":{},"body":{"index.html":{}}}],["expect(myhelperservicemock.dosomething).tohavebeencalledwith(myhelperservicemock.data.value",{"_index":384,"title":{},"body":{"index.html":{}}}],["expect(myhelperservicemock.getdata).tohavebeencalledwith(4",{"_index":383,"title":{},"body":{"index.html":{}}}],["export",{"_index":28,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"index.html":{}}}],["exports",{"_index":98,"title":{},"body":{"modules/NgMagicTetBedModule.html":{},"overview.html":{}}}],["express",{"_index":449,"title":{},"body":{"license.html":{}}}],["extend",{"_index":331,"title":{},"body":{"index.html":{}}}],["fake",{"_index":68,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["false",{"_index":82,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{}}}],["files",{"_index":286,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":454,"title":{},"body":{"license.html":{}}}],["following",{"_index":351,"title":{},"body":{"index.html":{},"license.html":{}}}],["foreachinnermethod",{"_index":219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["foreachinnermethod(callback",{"_index":75,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["foreachinnermethod(describecallback",{"_index":65,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["form",{"_index":284,"title":{},"body":{"index.html":{}}}],["found",{"_index":398,"title":{},"body":{"index.html":{}}}],["free",{"_index":416,"title":{},"body":{"license.html":{}}}],["fresh",{"_index":311,"title":{},"body":{"index.html":{}}}],["function",{"_index":20,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":234,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["functions/spy",{"_index":229,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["furnished",{"_index":437,"title":{},"body":{"license.html":{}}}],["generated",{"_index":330,"title":{},"body":{"index.html":{}}}],["getdata",{"_index":386,"title":{},"body":{"index.html":{}}}],["getdata(param",{"_index":368,"title":{},"body":{"index.html":{}}}],["getinnermethodmetas",{"_index":220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getinnermethodmetas(describecallback",{"_index":38,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["getlatest",{"_index":128,"title":{},"body":{"classes/SpyObserver.html":{}}}],["getmethodkeysfromobject",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmethodkeysfromobject(obj",{"_index":263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":273,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":405,"title":{},"body":{"index.html":{}}}],["granted",{"_index":415,"title":{},"body":{"license.html":{}}}],["graph",{"_index":474,"title":{},"body":{"modules.html":{}}}],["helper",{"_index":295,"title":{},"body":{"index.html":{}}}],["here",{"_index":347,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":414,"title":{},"body":{"license.html":{}}}],["holders",{"_index":460,"title":{},"body":{"license.html":{}}}],["https://github.blog/2016",{"_index":400,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/@peejay",{"_index":345,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["iinnermethodmeta",{"_index":1,"title":{"interfaces/IInnerMethodMeta.html":{}},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{}}}],["implementation",{"_index":350,"title":{},"body":{"index.html":{}}}],["implicitly",{"_index":306,"title":{},"body":{"index.html":{}}}],["implied",{"_index":450,"title":{},"body":{"license.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{}}}],["import(aimport",{"_index":167,"title":{},"body":{"classes/TestBedBase.html":{}}}],["imports",{"_index":97,"title":{},"body":{"modules/NgMagicTetBedModule.html":{},"classes/TestBedBase.html":{}}}],["imports(imports",{"_index":170,"title":{},"body":{"classes/TestBedBase.html":{}}}],["included",{"_index":443,"title":{},"body":{"license.html":{}}}],["including",{"_index":310,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{}}}],["initialconfig",{"_index":160,"title":{},"body":{"classes/TestBedBase.html":{}}}],["inittestenvironment",{"_index":50,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["injectable",{"_index":359,"title":{},"body":{"index.html":{}}}],["innerpath",{"_index":74,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["install",{"_index":341,"title":{},"body":{"index.html":{}}}],["installation",{"_index":339,"title":{},"body":{"index.html":{}}}],["integration",{"_index":375,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IInnerMethodMeta.html":{}},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["it('should",{"_index":379,"title":{},"body":{"index.html":{}}}],["it(meta.text",{"_index":41,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["iterator",{"_index":70,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["itself",{"_index":302,"title":{},"body":{"index.html":{}}}],["jasmine",{"_index":316,"title":{},"body":{"index.html":{}}}],["jasmine.createspy('dosomething",{"_index":395,"title":{},"body":{"index.html":{}}}],["jasmine.createspy('getdata').and.returnvalue(this.data",{"_index":396,"title":{},"body":{"index.html":{}}}],["jasmine.createspy(prefix",{"_index":135,"title":{},"body":{"classes/SpyObserver.html":{}}}],["jasmine.spy",{"_index":121,"title":{},"body":{"classes/SpyObserver.html":{}}}],["jasminecreatespy",{"_index":231,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["jasminecreatespy(target",{"_index":267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jest",{"_index":232,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon.bind(jest",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":317,"title":{},"body":{"index.html":{}}}],["key",{"_index":268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kind",{"_index":448,"title":{},"body":{"license.html":{}}}],["known",{"_index":278,"title":{},"body":{"index.html":{}}}],["lastdescribebeforeeach",{"_index":73,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["lasttest",{"_index":72,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["latest",{"_index":111,"title":{},"body":{"classes/SpyObserver.html":{}}}],["legend",{"_index":479,"title":{},"body":{"overview.html":{}}}],["less",{"_index":290,"title":{},"body":{"index.html":{}}}],["liability",{"_index":464,"title":{},"body":{"license.html":{}}}],["liable",{"_index":461,"title":{},"body":{"license.html":{}}}],["license",{"_index":407,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":425,"title":{},"body":{"license.html":{}}}],["limited",{"_index":451,"title":{},"body":{"license.html":{}}}],["local",{"_index":291,"title":{},"body":{"index.html":{}}}],["lot",{"_index":281,"title":{},"body":{"index.html":{}}}],["magic",{"_index":7,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["magic.injection(myservice",{"_index":378,"title":{},"body":{"index.html":{}}}],["magic.servicemock(myhelperservice",{"_index":377,"title":{},"body":{"index.html":{}}}],["make",{"_index":224,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["make(a",{"_index":269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manual",{"_index":321,"title":{},"body":{"index.html":{}}}],["maps",{"_index":300,"title":{},"body":{"index.html":{}}}],["matching",{"_index":87,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":453,"title":{},"body":{"license.html":{}}}],["merge",{"_index":429,"title":{},"body":{"license.html":{}}}],["meta",{"_index":66,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["meta.callback",{"_index":77,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["meta.path",{"_index":43,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["metas",{"_index":37,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["metas.foreach(meta",{"_index":40,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["metas.push(meta",{"_index":67,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["methods",{"_index":150,"title":{},"body":{"classes/TestBedBase.html":{},"index.html":{}}}],["miscellaneous",{"_index":254,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":408,"title":{},"body":{"license.html":{}}}],["mock",{"_index":328,"title":{},"body":{"index.html":{}}}],["mocks",{"_index":294,"title":{},"body":{"index.html":{}}}],["modify",{"_index":428,"title":{},"body":{"license.html":{}}}],["module",{"_index":89,"title":{"modules/NgMagicTetBedModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules/NgMagicTetBedModule.html":{},"modules.html":{}}}],["more",{"_index":319,"title":{},"body":{"index.html":{}}}],["myhelper",{"_index":371,"title":{},"body":{"index.html":{}}}],["myhelperservice",{"_index":355,"title":{},"body":{"index.html":{}}}],["myhelperservicemock",{"_index":376,"title":{},"body":{"index.html":{}}}],["myhelperservicemock2",{"_index":389,"title":{},"body":{"index.html":{}}}],["myserver",{"_index":352,"title":{},"body":{"index.html":{}}}],["myservice",{"_index":370,"title":{},"body":{"index.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":139,"title":{},"body":{"classes/SpyObserver.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":108,"title":{},"body":{"classes/SpyObserver.html":{}}}],["ng",{"_index":6,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ngmagicsetuptestbed",{"_index":244,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ngmagictestbed",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["ngmagictetbedmodule",{"_index":90,"title":{"modules/NgMagicTetBedModule.html":{}},"body":{"modules/NgMagicTetBedModule.html":{},"modules.html":{}}}],["ngmodule",{"_index":94,"title":{},"body":{"modules/NgMagicTetBedModule.html":{}}}],["noninfringement",{"_index":457,"title":{},"body":{"license.html":{}}}],["notice",{"_index":441,"title":{},"body":{"license.html":{}}}],["npm",{"_index":340,"title":{},"body":{"index.html":{}}}],["number",{"_index":365,"title":{},"body":{"index.html":{}}}],["obj",{"_index":264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":298,"title":{},"body":{"index.html":{}}}],["observable",{"_index":114,"title":{},"body":{"classes/SpyObserver.html":{},"miscellaneous/functions.html":{}}}],["observable.subscribe(next",{"_index":140,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observations",{"_index":109,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observe",{"_index":226,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["observe(observable",{"_index":271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observer.class.ts",{"_index":103,"title":{},"body":{"classes/SpyObserver.html":{},"coverage.html":{}}}],["observer.class.ts:10",{"_index":117,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observer.class.ts:4",{"_index":124,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observer.class.ts:5",{"_index":123,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observer.class.ts:6",{"_index":122,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observer.class.ts:7",{"_index":127,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observer.class.ts:8",{"_index":129,"title":{},"body":{"classes/SpyObserver.html":{}}}],["observers",{"_index":297,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":419,"title":{},"body":{"license.html":{}}}],["of.function.ts",{"_index":230,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":119,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":61,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["originaldescribebeforeeach",{"_index":30,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["originaldescribebeforeeach(describetext",{"_index":34,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["originals",{"_index":44,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["originals[propname",{"_index":64,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["otherwise",{"_index":469,"title":{},"body":{"license.html":{}}}],["out",{"_index":471,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overridecomponent",{"_index":51,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["overridedirective",{"_index":52,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["overridemodule",{"_index":53,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["overridepipe",{"_index":54,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["overrideprovider",{"_index":55,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["overridetemplate",{"_index":56,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["overridetemplateusingtestingmodule",{"_index":57,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["overview",{"_index":477,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":323,"title":{},"body":{"index.html":{}}}],["pages",{"_index":406,"title":{},"body":{"index.html":{}}}],["param",{"_index":367,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":118,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":455,"title":{},"body":{"license.html":{}}}],["path",{"_index":18,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["path1",{"_index":261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path1.every((entry",{"_index":83,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["path1.length",{"_index":80,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["path2",{"_index":79,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["path2.length",{"_index":81,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["path2[index",{"_index":84,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["pathisequal",{"_index":221,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pathisequal(meta.path",{"_index":76,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["pathisequal(path1",{"_index":78,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/functions.html":{}}}],["peejay",{"_index":342,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":413,"title":{},"body":{"license.html":{}}}],["permit",{"_index":435,"title":{},"body":{"license.html":{}}}],["person",{"_index":418,"title":{},"body":{"license.html":{}}}],["persons",{"_index":436,"title":{},"body":{"license.html":{}}}],["portions",{"_index":445,"title":{},"body":{"license.html":{}}}],["postjob",{"_index":211,"title":{},"body":{"classes/TestBedBase.html":{}}}],["postjobs",{"_index":148,"title":{},"body":{"classes/TestBedBase.html":{}}}],["prefix",{"_index":71,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"miscellaneous/functions.html":{}}}],["prejob(config",{"_index":208,"title":{},"body":{"classes/TestBedBase.html":{}}}],["prejobs",{"_index":149,"title":{},"body":{"classes/TestBedBase.html":{}}}],["presentation/.../create",{"_index":256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["presentation/.../describe",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["presentation/.../make.function.ts",{"_index":258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["presentation/.../ng",{"_index":485,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["presentation/.../observe.function.ts",{"_index":259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["presentation/.../spy",{"_index":257,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["presentation/.../test",{"_index":486,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["presentation/projects/ng",{"_index":10,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":362,"title":{},"body":{"index.html":{}}}],["progress",{"_index":399,"title":{},"body":{"index.html":{}}}],["project",{"_index":404,"title":{},"body":{"index.html":{}}}],["properties",{"_index":16,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{}}}],["propnames",{"_index":45,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["propnames.foreach(propname",{"_index":60,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["protected",{"_index":147,"title":{},"body":{"classes/TestBedBase.html":{}}}],["prototype",{"_index":185,"title":{},"body":{"classes/TestBedBase.html":{}}}],["provide",{"_index":391,"title":{},"body":{"index.html":{}}}],["provided",{"_index":446,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":360,"title":{},"body":{"index.html":{}}}],["provider",{"_index":152,"title":{},"body":{"classes/TestBedBase.html":{}}}],["provider(provider",{"_index":172,"title":{},"body":{"classes/TestBedBase.html":{}}}],["providers",{"_index":153,"title":{},"body":{"classes/TestBedBase.html":{},"index.html":{},"overview.html":{}}}],["providers(providers",{"_index":174,"title":{},"body":{"classes/TestBedBase.html":{}}}],["public",{"_index":104,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"index.html":{}}}],["publish",{"_index":403,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":456,"title":{},"body":{"license.html":{}}}],["readability",{"_index":289,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":105,"title":{},"body":{"classes/SpyObserver.html":{}}}],["reconfiguration",{"_index":308,"title":{},"body":{"index.html":{}}}],["referencing",{"_index":293,"title":{},"body":{"index.html":{}}}],["remove",{"_index":280,"title":{},"body":{"index.html":{}}}],["reset",{"_index":154,"title":{},"body":{"classes/TestBedBase.html":{},"overview.html":{}}}],["resettestenvironment",{"_index":58,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["resettestingmodule",{"_index":59,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["restriction",{"_index":424,"title":{},"body":{"license.html":{}}}],["result",{"_index":86,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":88,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":69,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"index.html":{}}}],["returns",{"_index":164,"title":{},"body":{"classes/TestBedBase.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":426,"title":{},"body":{"license.html":{}}}],["root",{"_index":361,"title":{},"body":{"index.html":{}}}],["running",{"_index":397,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":130,"title":{},"body":{"classes/SpyObserver.html":{}}}],["sample",{"_index":346,"title":{},"body":{"index.html":{}}}],["save",{"_index":344,"title":{},"body":{"index.html":{}}}],["schema",{"_index":155,"title":{},"body":{"classes/TestBedBase.html":{}}}],["schema(schema",{"_index":177,"title":{},"body":{"classes/TestBedBase.html":{}}}],["schemametadata",{"_index":178,"title":{},"body":{"classes/TestBedBase.html":{}}}],["schemas",{"_index":156,"title":{},"body":{"classes/TestBedBase.html":{}}}],["schemas(schemas",{"_index":180,"title":{},"body":{"classes/TestBedBase.html":{}}}],["sell",{"_index":433,"title":{},"body":{"license.html":{}}}],["service",{"_index":329,"title":{},"body":{"index.html":{}}}],["service.dosomething(param",{"_index":382,"title":{},"body":{"index.html":{}}}],["services",{"_index":296,"title":{},"body":{"index.html":{}}}],["setup",{"_index":242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setup.function.ts",{"_index":239,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setuptestbed",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["shall",{"_index":442,"title":{},"body":{"license.html":{}}}],["short",{"_index":348,"title":{},"body":{"index.html":{}}}],["simple",{"_index":327,"title":{},"body":{"index.html":{}}}],["software",{"_index":421,"title":{},"body":{"license.html":{}}}],["solutions",{"_index":412,"title":{},"body":{"license.html":{}}}],["solutions/ng",{"_index":343,"title":{},"body":{"index.html":{}}}],["something",{"_index":353,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":285,"title":{},"body":{"index.html":{}}}],["spies",{"_index":318,"title":{},"body":{"index.html":{}}}],["spy",{"_index":320,"title":{},"body":{"index.html":{}}}],["spyobserver",{"_index":100,"title":{"classes/SpyObserver.html":{}},"body":{"classes/SpyObserver.html":{},"coverage.html":{}}}],["spyonfunctionof",{"_index":233,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["spyonfunctionsof",{"_index":236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["spyonfunctionsof(target",{"_index":265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spyonownfunctionsof",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["spyonownfunctionsof(target",{"_index":272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standard",{"_index":388,"title":{},"body":{"index.html":{}}}],["started",{"_index":274,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":322,"title":{},"body":{"index.html":{}}}],["strongly",{"_index":324,"title":{},"body":{"index.html":{}}}],["subject",{"_index":438,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":431,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":444,"title":{},"body":{"license.html":{}}}],["t",{"_index":131,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":8,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"modules/NgMagicTetBedModule.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["test/it",{"_index":313,"title":{},"body":{"index.html":{}}}],["testbed",{"_index":26,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/TestBedBase.html":{},"index.html":{}}}],["testbed.configuretestingmodule",{"_index":390,"title":{},"body":{"index.html":{}}}],["testbed.configuretestingmodule(config",{"_index":209,"title":{},"body":{"classes/TestBedBase.html":{}}}],["testbed.get(myservice",{"_index":393,"title":{},"body":{"index.html":{}}}],["testbed[propname",{"_index":62,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{}}}],["testbedbase",{"_index":143,"title":{"classes/TestBedBase.html":{}},"body":{"classes/TestBedBase.html":{},"coverage.html":{}}}],["testee",{"_index":301,"title":{},"body":{"index.html":{}}}],["testmodulemetadata",{"_index":158,"title":{},"body":{"classes/TestBedBase.html":{}}}],["tests",{"_index":336,"title":{},"body":{"index.html":{}}}],["text",{"_index":19,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/variables.html":{}}}],["thing",{"_index":358,"title":{},"body":{"index.html":{}}}],["this.complete",{"_index":137,"title":{},"body":{"classes/SpyObserver.html":{}}}],["this.counter",{"_index":366,"title":{},"body":{"index.html":{}}}],["this.data",{"_index":387,"title":{},"body":{"index.html":{}}}],["this.declarations([declaration",{"_index":189,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.error",{"_index":136,"title":{},"body":{"classes/SpyObserver.html":{}}}],["this.imports([aimport",{"_index":193,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.aotsummaries",{"_index":206,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.declarations",{"_index":199,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.declarations.slice",{"_index":200,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.imports",{"_index":201,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.imports.slice",{"_index":202,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.providers",{"_index":197,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.providers.slice",{"_index":198,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.schemas",{"_index":203,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.initialconfig.schemas.slice",{"_index":204,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.myhelper.dosomething(data.value",{"_index":373,"title":{},"body":{"index.html":{}}}],["this.myhelper.getdata(param",{"_index":372,"title":{},"body":{"index.html":{}}}],["this.next",{"_index":134,"title":{},"body":{"classes/SpyObserver.html":{}}}],["this.next(next",{"_index":142,"title":{},"body":{"classes/SpyObserver.html":{}}}],["this.observations",{"_index":138,"title":{},"body":{"classes/SpyObserver.html":{}}}],["this.observations.push(next",{"_index":141,"title":{},"body":{"classes/SpyObserver.html":{}}}],["this.observations[this.observations.length",{"_index":132,"title":{},"body":{"classes/SpyObserver.html":{}}}],["this.postjobs.foreach(postjob",{"_index":210,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.prejobs.foreach(prejob",{"_index":207,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.prejobs.push(config",{"_index":187,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.providers([provider",{"_index":195,"title":{},"body":{"classes/TestBedBase.html":{}}}],["this.schemas([schema",{"_index":191,"title":{},"body":{"classes/TestBedBase.html":{}}}],["tort",{"_index":468,"title":{},"body":{"license.html":{}}}],["type",{"_index":21,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":483,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":325,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":63,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":326,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":427,"title":{},"body":{"license.html":{}}}],["usevalue",{"_index":392,"title":{},"body":{"index.html":{}}}],["using",{"_index":354,"title":{},"body":{"index.html":{}}}],["value",{"_index":126,"title":{},"body":{"classes/SpyObserver.html":{},"classes/TestBedBase.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":292,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":32,"title":{},"body":{"interfaces/IInnerMethodMeta.html":{},"classes/TestBedBase.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":452,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":447,"title":{},"body":{"license.html":{}}}],["well",{"_index":277,"title":{},"body":{"index.html":{}}}],["whether",{"_index":465,"title":{},"body":{"license.html":{}}}],["without",{"_index":337,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":380,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":276,"title":{},"body":{"index.html":{}}}],["write",{"_index":335,"title":{},"body":{"index.html":{}}}],["yes",{"_index":120,"title":{},"body":{"classes/SpyObserver.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":481,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IInnerMethodMeta.html":{"url":"interfaces/IInnerMethodMeta.html","title":"interface - IInnerMethodMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IInnerMethodMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        callback\n                                \n                                \n                                        path\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TestBed } from '@angular/core/testing';\n\nexport let describeBeforeEach = originalDescribeBeforeEach;\nexport let describeTest = (text: string, callback: () => void) => void (0);\n\n\nfunction originalDescribeBeforeEach(describeText: string, describeCallback) {\n  const metas = getInnerMethodMetas(describeCallback);\n  describe(describeText, () => {\n    metas.forEach(meta => {\n      it(meta.text, () => {\n        callInnerMethodAtPath(describeCallback, meta.path);\n      });\n    });\n  });\n}\n\nfunction getInnerMethodMetas(describeCallback): Array {\n  const metas = [];\n  const originals = {};\n\n  const propNames = ['configureTestingModule', 'get', 'compileComponents', 'configureCompiler', 'createComponent',\n    'initTestEnvironment', 'overrideComponent', 'overrideDirective', 'overrideModule', 'overridePipe', 'overrideProvider',\n    'overrideTemplate', 'overrideTemplateUsingTestingModule', 'resetTestEnvironment', 'resetTestingModule'];\n  propNames.forEach(propName => {\n    const original = TestBed[propName];\n    if (typeof original === 'function') {\n      originals[propName] = original;\n      TestBed[propName] = () => void (0);\n    }\n  });\n\n  forEachInnerMethod(describeCallback, meta => {\n    metas.push(meta);\n  });\n  propNames.forEach(propName => {\n    const fake = TestBed[propName];\n    if (typeof fake === 'function') {\n      TestBed[propName] = originals[propName];\n    }\n  });\n  return metas;\n}\n\nfunction forEachInnerMethod(describeCallback, iterator: (meta: IInnerMethodMeta) => void, path: Array = [], prefix: string = '') {\n  let index = 0;\n  const lastTest = describeTest;\n  const lastDescribeBeforeEach = describeBeforeEach;\n  describeBeforeEach = (text, callback) => {\n    const innerPath = [...path, index];\n    forEachInnerMethod(callback, iterator, innerPath, prefix + ' ' + text);\n    index++;\n  };\n  describeTest = (text: string, callback) => {\n    iterator({\n      path: [...path, index], text: prefix + ' ' + text, callback\n    });\n    index++;\n  };\n  describeCallback();\n  describeTest = lastTest;\n  describeBeforeEach = lastDescribeBeforeEach;\n}\n\ninterface IInnerMethodMeta {\n  text: string;\n  callback: () => void;\n  path: Array;\n}\n\nfunction callInnerMethodAtPath(describeCallback: () => void, path: Array) {\n  forEachInnerMethod(describeCallback, meta => {\n    if (pathIsEqual(meta.path, path)) {\n      meta.callback();\n    }\n  });\n}\n\nfunction pathIsEqual(path1: Array, path2: Array) {\n  if (path1.length !== path2.length) {\n    return false;\n  }\n  return path1.every((entry, index) => path2[index] === entry);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgMagicTetBedModule.html":{"url":"modules/NgMagicTetBedModule.html","title":"module - NgMagicTetBedModule","body":"\n                   \n\n\n\n\n    Modules\n    NgMagicTetBedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/ng-magic-test-bed.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class NgMagicTetBedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpyObserver.html":{"url":"classes/SpyObserver.html","title":"class - SpyObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpyObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                complete\n                            \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                next\n                            \n                            \n                                    Public\n                                    Readonly\n                                observations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    latest\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(observable: Observable, name?: string)\n                    \n                \n                        \n                            \n                                Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observable\n                                                  \n                                                        \n                                                                    Observable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            complete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     jasmine.Spy\n\n                        \n                    \n                        \n                            \n                                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     jasmine.Spy\n\n                        \n                    \n                        \n                            \n                                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            next\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     jasmine.Spy\n\n                        \n                    \n                        \n                            \n                                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        latest\n                    \n                \n\n                \n                    \n                        getlatest()\n                    \n                \n                            \n                                \n                                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport class SpyObserver {\n    public readonly next: jasmine.Spy;\n    public readonly error: jasmine.Spy;\n    public readonly complete: jasmine.Spy;\n    public readonly observations: Array = [];\n    public get latest(): T {\n        return this.observations[this.observations.length - 1];\n    }\n\n    constructor(observable: Observable, name?: string) {\n        const prefix = name ? name + '.' : '';\n        this.next = jasmine.createSpy(prefix + 'next');\n        this.error = jasmine.createSpy(prefix + 'error');\n        this.complete = jasmine.createSpy(prefix + 'complete:');\n        this.observations = new Array();\n        observable.subscribe(next => {\n            this.observations.push(next);\n            this.next(next);\n        }, this.error, this.complete);\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBedBase.html":{"url":"classes/TestBedBase.html","title":"class - TestBedBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBedBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                postJobs\n                            \n                            \n                                    Protected\n                                preJobs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                declaration\n                            \n                            \n                                    Public\n                                declarations\n                            \n                            \n                                    Public\n                                import\n                            \n                            \n                                    Public\n                                imports\n                            \n                            \n                                    Public\n                                provider\n                            \n                            \n                                    Public\n                                providers\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                schema\n                            \n                            \n                                    Public\n                                schemas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialConfig: TestModuleMetadata)\n                    \n                \n                        \n                            \n                                Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialConfig\n                                                  \n                                                        \n                                                                        TestModuleMetadata\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            postJobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            preJobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            declaration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    declaration(declaration)\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    declaration\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            declarations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    declarations(declarations: Array)\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    declarations\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            import\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    import(aImport: any)\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aImport\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            imports\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    imports(imports: any[])\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imports\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            provider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    provider(provider: any)\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            providers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    providers(providers: any[])\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    providers\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            schema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    schema(schema: SchemaMetadata | any[])\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schema\n                                    \n                                            SchemaMetadata | any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            schemas\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    schemas(schemas: Array)\n                \n            \n\n\n            \n                \n                    Defined in ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schemas\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TestBed, ComponentFixture, TestModuleMetadata, async } from '@angular/core/testing';\nimport {  SchemaMetadata } from '@angular/core';\n\ntype AbstractType = Function & { prototype: T };\n\nexport class TestBedBase {\n\n    protected preJobs: Array void> = [];\n    protected postJobs: Array void> = [];\n\n    constructor(private initialConfig: TestModuleMetadata = {}) {\n    }\n\n    public declarations(declarations: Array) {\n        this.preJobs.push(config => {\n            config.declarations.push(...declarations);\n        });\n    }\n\n    public declaration(declaration) {\n        this.declarations([declaration]);\n    }\n\n    public schemas(schemas: Array) {\n        this.preJobs.push(config => {\n            config.schemas.push(...schemas);\n        });\n    }\n\n    public schema(schema: SchemaMetadata | any[]) {\n        this.schemas([schema]);\n    }\n\n    public imports(imports: any[]) {\n        this.preJobs.push(config => {\n            config.imports.push(...imports);\n        });\n    }\n\n    public import(aImport: any) {\n        this.imports([aImport]);\n    }\n\n    public providers(providers: any[]) {\n        this.preJobs.push(config => {\n            config.providers.push(...providers);\n        });\n    }\n\n    public provider(provider: any) {\n        this.providers([provider]);\n    }\n\n\n    public reset() {\n        const config: TestModuleMetadata = {\n            providers: this.initialConfig.providers ? this.initialConfig.providers.slice() : [],\n            declarations: this.initialConfig.declarations ? this.initialConfig.declarations.slice() : [],\n            imports: this.initialConfig.imports ? this.initialConfig.imports.slice() : [],\n            schemas: this.initialConfig.schemas ? this.initialConfig.schemas.slice() : [],\n            aotSummaries: this.initialConfig.aotSummaries\n        };\n        this.preJobs.forEach(preJob => preJob(config));\n        TestBed.configureTestingModule(config);\n        this.postJobs.forEach(postJob => postJob());\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            interface\n            IInnerMethodMeta\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            function\n            callInnerMethodAtPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            function\n            forEachInnerMethod\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            function\n            getInnerMethodMetas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            function\n            originalDescribeBeforeEach\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            function\n            pathIsEqual\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            variable\n            describeBeforeEach\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n            \n            variable\n            describeTest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/make/make.function.ts\n            \n            function\n            make\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/observe.function.ts\n            \n            function\n            observe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/spy-observer.class.ts\n            \n            class\n            SpyObserver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-function-of.function.ts\n            \n            function\n            jasmineCreateSpy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-function-of.function.ts\n            \n            variable\n            jest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-function-of.function.ts\n            \n            variable\n            spyOnFunctionOf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-functions-of.function.ts\n            \n            function\n            getMethodKeysFromObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-functions-of.function.ts\n            \n            function\n            spyOnFunctionsOf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-own-functions-of.function.ts\n            \n            function\n            spyOnOwnFunctionsOf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/create-setup.function.ts\n            \n            function\n            createSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/ng-magic-setup-test-bed.class.ts\n            \n            class\n            NgMagicSetupTestBed\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/ng-magic-test-bed.class.ts\n            \n            class\n            NgMagicTestBed\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/setup-test-bed.class.ts\n            \n            class\n            SetupTestBed\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts\n            \n            class\n            TestBedBase\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            callInnerMethodAtPath   (ng-magic-test-bed-presentation/.../describe-before-each.function.ts)\n                        \n                        \n                            createSetup   (ng-magic-test-bed-presentation/.../create-setup.function.ts)\n                        \n                        \n                            forEachInnerMethod   (ng-magic-test-bed-presentation/.../describe-before-each.function.ts)\n                        \n                        \n                            getInnerMethodMetas   (ng-magic-test-bed-presentation/.../describe-before-each.function.ts)\n                        \n                        \n                            getMethodKeysFromObject   (ng-magic-test-bed-presentation/.../spy-on-functions-of.function.ts)\n                        \n                        \n                            jasmineCreateSpy   (ng-magic-test-bed-presentation/.../spy-on-function-of.function.ts)\n                        \n                        \n                            make   (ng-magic-test-bed-presentation/.../make.function.ts)\n                        \n                        \n                            observe   (ng-magic-test-bed-presentation/.../observe.function.ts)\n                        \n                        \n                            originalDescribeBeforeEach   (ng-magic-test-bed-presentation/.../describe-before-each.function.ts)\n                        \n                        \n                            pathIsEqual   (ng-magic-test-bed-presentation/.../describe-before-each.function.ts)\n                        \n                        \n                            spyOnFunctionsOf   (ng-magic-test-bed-presentation/.../spy-on-functions-of.function.ts)\n                        \n                        \n                            spyOnOwnFunctionsOf   (ng-magic-test-bed-presentation/.../spy-on-own-functions-of.function.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            callInnerMethodAtPath\n                        \n                        \n                    \n                \n            \n            \n                \ncallInnerMethodAtPath(describeCallback, path)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    describeCallback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forEachInnerMethod\n                        \n                        \n                    \n                \n            \n            \n                \nforEachInnerMethod(describeCallback, iterator, path, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    describeCallback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    iterator\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInnerMethodMetas\n                        \n                        \n                    \n                \n            \n            \n                \ngetInnerMethodMetas(describeCallback)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    describeCallback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            originalDescribeBeforeEach\n                        \n                        \n                    \n                \n            \n            \n                \noriginalDescribeBeforeEach(describeText, describeCallback)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    describeText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    describeCallback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathIsEqual\n                        \n                        \n                    \n                \n            \n            \n                \npathIsEqual(path1, path2)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/create-setup.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSetup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSetup(setup)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    setup\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-functions-of.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getMethodKeysFromObject\n                        \n                        \n                    \n                \n            \n            \n                \ngetMethodKeysFromObject(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            spyOnFunctionsOf\n                        \n                        \n                    \n                \n            \n            \n                \nspyOnFunctionsOf(target: any, source?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-function-of.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            jasmineCreateSpy\n                        \n                        \n                    \n                \n            \n            \n                \njasmineCreateSpy(target: any, key)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/make/make.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            make\n                        \n                        \n                    \n                \n            \n            \n                \nmake(a, b)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/observe/observe.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            observe\n                        \n                        \n                    \n                \n            \n            \n                \nobserve(observable, name?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-own-functions-of.function.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            spyOnOwnFunctionsOf\n                        \n                        \n                    \n                \n            \n            \n                \nspyOnOwnFunctionsOf(target)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng-magic-test-bed\nA magic test bed for angular. This Wrapper for the well known angular test bed (@angular/core/testing) allows you to remove a lot of bloat code form your spec files.\nBenefits\n\nBetter readability\n\nLess code\n\nAll local variables referencing mocks, helper-services, observers, objects, arrays, maps and the testee itself can be defined as constants\n\nConfiguration of the test bed is done implicitly while assigning your local variables\n\nReconfiguration of the entire test bed including fresh mocks and services before each test/it is done in background\n\nCreation of jest or jasmine (karma) spies for all your mocks' functions is done implicitly. No more spy manual spy creation with magic strings to overwrite strongly typed methods of TypeScript objects.\n\nA simple mock with spies for all methods of a service is generated. You can extend these auto generated mocks with custom behavior.\n\nWrite tests without beforeEach.\n\n\nInstallation\nnpm install @peejay-solutions/ng-magic-test-bed --save\nhttps://www.npmjs.com/package/@peejay-solutions/ng-magic-test-bed\nSample\nHere a short example where we test the implementation of the following: We have MyServer that does something using MyHelperService to get data and do another thing. \nMyHelperService\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MyHelperService {\n    private counter = 0;\n    constructor() {\n    }\n\n    public doSomething(param: number) {\n        this.counter = this.counter + param;\n    }\n\n    public getData(param: number) {\n        return {\n            value: param / 2\n        };\n    }\n}\nMyService\n@Injectable({\n    providedIn: 'root'\n})\nexport class MyService {\n    constructor(private myHelper: MyHelperService) {\n    }\n\n    public doSomething(param) {\n        const data = this.myHelper.getData(param);\n        this.myHelper.doSomething(data.value);\n    }\n}MyService spec with magic test bed\ndescribe('Simple integration test for ng magic setup test bed', () => {\n    function setup() {\n        const magic = new NgMagicSetupTestBed();\n        const myHelperServiceMock = magic.serviceMock(MyHelperService, new MyHelperServiceMock());\n        const service = magic.injection(MyService);\n        return { myHelperServiceMock, service };\n    }\n\n    it('should work', () => {\n        const { service, myHelperServiceMock } = setup();\n        const param = 4;\n        service.doSomething(param);\n        expect(myHelperServiceMock.getData).toHaveBeenCalledWith(4);\n        expect(myHelperServiceMock.doSomething).toHaveBeenCalledWith(myHelperServiceMock.data.value);\n    });\n});\n\nclass MyHelperServiceMock {\n    public data = { value: 100 };\n    public getData = () => this.data;\n}\nMyService spec with no magic but standard test bed\ndescribe('Simple integration test for no magic but standard TestBed', () => {\n    let myHelperServiceMock;\n    let service: MyService;\n\n    beforeEach(() => {\n        const data = { value: 100 };\n        myHelperServiceMock = new MyHelperServiceMock2();\n        TestBed.configureTestingModule({\n            providers: [\n                { provide: MyHelperService, useValue: myHelperServiceMock },\n            ]\n        });\n        service = TestBed.get(MyService);\n    });\n\n    it('should work', () => {\n        const param = 4;\n        service.doSomething(param);\n        expect(myHelperServiceMock.getData).toHaveBeenCalledWith(4);\n        expect(myHelperServiceMock.doSomething).toHaveBeenCalledWith(myHelperServiceMock.data.value);\n    });\n});\n\nclass MyHelperServiceMock2 {\n    public data = { value: 100 };\n    public doSomething = jasmine.createSpy('doSomething');\n    public getData = jasmine.createSpy('getData').and.returnValue(this.data);\n}#\nThe running code can be found here\nDocumentation\n... Work in progress.\nhttps://github.blog/2016-08-22-publish-your-project-documentation-with-github-pages/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 peejay-solutions\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgMagicTetBedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractType   (ng-magic-test-bed-presentation/.../ng-magic-test-bed.class.ts)\n                        \n                        \n                            AbstractType   (ng-magic-test-bed-presentation/.../test-bed-base.class.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/ng-magic-test-bed.class.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/test-bed/test-bed-base.class.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            describeBeforeEach   (ng-magic-test-bed-presentation/.../describe-before-each.function.ts)\n                        \n                        \n                            describeTest   (ng-magic-test-bed-presentation/.../describe-before-each.function.ts)\n                        \n                        \n                            jest   (ng-magic-test-bed-presentation/.../spy-on-function-of.function.ts)\n                        \n                        \n                            spyOnFunctionOf   (ng-magic-test-bed-presentation/.../spy-on-function-of.function.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/describe-before-each/describe-before-each.function.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            describeBeforeEach\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : originalDescribeBeforeEach\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            describeTest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (text: string, callback: () => void) => void (0)\n                        \n                    \n\n\n            \n        \n\n    ng-magic-test-bed-presentation/projects/ng-magic-test-bed/src/spy-on-functions/spy-on-function-of.function.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spyOnFunctionOf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         void\n\n                        \n                    \n                    \n                        \n                            Default value : typeof jest !== 'undefined' ? jest.spyOn.bind(jest) : jasmineCreateSpy\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
